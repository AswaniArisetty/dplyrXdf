% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/group_by.R
\name{group_by.RxFileData}
\alias{group_by.RxFileData}
\alias{group_by}
\alias{group_by.RxXdfData}
\alias{group_by.tbl_xdf}
\alias{group_by.grouped_tbl_xdf}
\title{Group an Xdf file by one or more variables}
\usage{
\method{group_by}{RxFileData}(.data, ..., add = FALSE)

\method{group_by}{RxXdfData}(.data, ..., add = FALSE)

\method{group_by}{tbl_xdf}(.data, ..., add = FALSE)

\method{group_by}{grouped_tbl_xdf}(.data, ..., add = FALSE)
}
\arguments{
\item{.data}{An Xdf file or a tbl wrapping the same.}

\item{...}{Variables to group by.}

\item{add}{If FALSE (the default), \code{group_by} will ignore existing groups. If TRUE, add grouping variables to existing groups.}

\item{.dots}{Used to work around non-standard evaluation.}
}
\description{
Group an Xdf file by one or more variables
}
\details{
When called on an Xdf file, \code{group_by} does not do any data processing; it only sets up the necessary metadata for verbs accepting grouped tbls to handle the data correctly. When called on a non-Xdf data source, it imports the data into an Xdf tbl.

Note that by default, the levels of the grouping variables for Xdf files are \emph{unsorted.}

Most verbs that have specific methods for grouped data will split the data into multiple Xdf files, and then process each file separately (the exception is \code{\link[dplyrXdf]{summarise}}, which allows a range of options in how to treat groups). There are two options for splitting the data: use the \code{\link[RevoScaleR]{rxExecBy}} supplied in the RevoScaleR package, or via dplyrXdf-internal code. The former is the default if the version of Microsoft R installed is 9.1 or higher.
}
\seealso{
\code{\link[dplyr]{group_by}}, \code{\link{dplyrxdf_options}} for how to change the splitting procedure
}

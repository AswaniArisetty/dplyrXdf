% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summarise.R
\name{summarise.RxFileData}
\alias{summarise.RxFileData}
\alias{summarise}
\alias{summarize}
\title{Summarise multiple values to a single value}
\usage{
\method{summarise}{RxFileData}(.data, ..., .outFile = tbl_xdf(.data), .rxArgs,
  .method = NULL)
}
\arguments{
\item{.data}{A tbl for an Xdf data source; or a raw Xdf data source.}

\item{...}{Name-value pairs of summary functions like \code{\link{min}()}, \code{\link{mean}()}, \code{\link{max}()} etc.}

\item{.outFile}{Output format for the returned data. If not supplied, create an xdf tbl; if \code{NULL}, return a data frame; if a character string naming a file, save an Xdf file at that location.}

\item{.rxArgs}{A list of RevoScaleR arguments. See \code{\link{rxArgs}} for details.}

\item{.dots}{Used to work around non-standard evaluation. See the dplyr vignettes for details. See "Details" below for how to change the summarisation method.}
}
\value{
An object representing the summary. This depends on the \code{.outFile} argument: if missing, it will be an xdf tbl object; if \code{NULL}, a data frame; and if a filename, an Xdf data source referencing a file saved to that location.
}
\description{
Summarise multiple values to a single value
}
\details{
There are 5 possible methods for doing the summarisation. To choose which method is used, specify a \code{.method} argument in the call to \code{summarise}, with a number from 1 to 5.
\enumerate{
 \item use \code{\link[RevoScaleR]{rxCube}}, cbind data frames together: only \code{n()}, \code{mean()}, \code{sum()} supported, grouped data only (fast)
 \item use \code{\link[RevoScaleR]{rxSummary}}, cbind data frames together: stats in rxSummary supported (fast)
 \item as 2), but build classification levels by pasting the grouping variable(s) together (moderately fast)
 \item split into multiple Xdfs by group, run \code{dplyr::summarise} on each, rbind xdfs together: arbitrary stats supported (slow)
 \item split into multiple Xdfs by group, run \code{rxSummary} on each, rbind xdfs together: stats in rxSummary supported (slowest, most scalable)
}
The default method is 1 if the data is grouped and the requested summary statistics are supported by \code{rxCube}; otherwise 2 if the requested statistics are supported by \code{rxSummary}; otherwise 4. Method 3 is supplied for the case where the product of factor levels for the grouping variables exceeds 2^32 - 1, a known limitation of \code{rxCube} and \code{rxSummary}.

Supplying custom functions to summarise is supported, but they must be \emph{named} functions (and will automatically cause \code{.method=4} to be selected). Anonymous functions will cause an error.

Due to the way in which \code{rxSummary} and \code{rxCube} work, when used with data in HDFS, the result of the summarisation will be streamed to the client (either the edge node or a remote client) before being written to back to HDFS.
}
\examples{
mtx <- as_xdf(mtcars, overwrite=TRUE)

tbl <- summarise(mtx, m=mean(mpg))
as.data.frame(tbl)

tbl2 <- group_by(mtx, cyl) \%>\% summarise(m=mean(mpg))
as.data.frame(tbl2)

select and summarise simultaneously with .rxArgs
tbl3 <- summarise(mtx, m=mean(mpg), .rxArgs=list(rowSelection=cyl > 4))

# save to a persistent Xdf file
summarise(mtx, m=mean(mpg), .outFile="mtcars_summary.xdf")
}
\seealso{
\code{\link[dplyr]{summarise}} in package dplyr, \code{\link[RevoScaleR]{rxCube}}, \code{\link[RevoScaleR]{rxSummary}}
}

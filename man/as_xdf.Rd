% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as_xdf.R, R/is_xdf.R
\name{as_composite_xdf}
\alias{as_composite_xdf}
\alias{as_standard_xdf}
\alias{as_xdf}
\alias{as_xdf.RxXdfData}
\alias{as_xdf.RxFileData}
\alias{as_xdf.RxDataSource}
\alias{as_xdf.default}
\alias{is_xdf}
\alias{is_composite_xdf}
\title{Detect and coerce to Xdf data source objects}
\usage{
as_composite_xdf(...)

as_standard_xdf(.data, ...)

as_xdf(.data, ...)

\method{as_xdf}{RxXdfData}(.data, file = NULL, composite = NULL,
  overwrite = TRUE, ...)

\method{as_xdf}{RxFileData}(.data, file = NULL, composite = in_hdfs(.data),
  overwrite = TRUE, ...)

\method{as_xdf}{RxDataSource}(.data, file = NULL, composite = NULL,
  overwrite = TRUE, ...)

\method{as_xdf}{default}(.data, file = NULL, composite = NULL,
  overwrite = TRUE, ...)

is_xdf(x)

is_composite_xdf(x)
}
\arguments{
\item{...}{Other arguments to pass to \code{\link{rxDataStep}}.}

\item{.data}{An R object that can be coerced to an Xdf data source. This includes another existing Xdf data source; see details below.}

\item{file}{The path/filename for the Xdf data file.}

\item{composite}{Whether to create a composite Xdf.}

\item{overwrite}{Whether to overwrite any existing file.}

\item{x}{An R object.}
}
\value{
For the \code{as} functions, an Xdf data source object pointing to the created file. For the \code{is} functions, a TRUE/FALSE value.
}
\description{
Functions to detect and coerce to Xdf data source objects.

Functions to detect and coerce to Xdf data source objects.
}
\details{
The \code{as_xdf} function takes the object given by \code{.data} and imports its data into an Xdf file, returning a data source pointing to that file. The file can be either a standard or a \emph{composite} Xdf, as given by the \code{composite} argument. A composite Xdf is actually a directory containing data and metadata files; it can be manipulated by the RevoScaleR functions as if it were a single dataset.

The \code{as_standard_xdf} and \code{as_composite_xdf} functions are shorthand for \code{as_xdf(*, composite=FALSE)} and \code{as_xdf(*, composite=TRUE)} respectively; they always create either a standard or composite Xdf. You can use this to switch an existing Xdf data source from one type of Xdf to the other. Note that Xdf files in HDFS must always be composite.

Passing a \code{tbl_xdf} object to an \code{as} function will strip off the tbl information, returning a raw Xdf data source. This can be useful for resetting the beginning of a pipeline.

The \code{file} argument gives the name of the Xdf file to create. If not specified, this is taken from the input data source where possible (for Xdf and file data sources, including text). Otherwise, a random name is generated. If no directory is specified, the file is created in the current working directory (if in the native filesystem) or in the user directory (in HDFS).

You can use the \code{as} functions with any RevoScaleR data source, or otherwise with any R object that can be turned into a data frame. The resulting Xdf file will be created in the same filesystem as the input data source. If the input does not have a filesystem, for example if it is an in-database table or a data frame, the file is created in the native filesystem.

The \code{is_xdf} function returns TRUE if \code{x} is an Xdf data source object; ie, it inherits from the \code{RxXdfData} class. This includes both raw Xdf data sources and \code{tbl_xdf} objects as created by dplyrXdf. The \code{is_composite_xdf} function returns TRUE if \code{x} is a \emph{composite} Xdf data source.

Detecting whether an object is a composite Xdf can be tricky and \code{is_composite_xdf} goes through a few steps to do this. If \code{x} has a non-NULL \code{createCompositeSet} slot, then that value is returned. Otherwise, it checks whether the \code{file} slot refers to an existing directory, whose name does \emph{not} have an extension (that is, \code{"foo"} qualifies as a valid filename for a composite Xdf, but not \code{"foo.xdf"}). This is necessary because of the semantics of \code{rxDataStep}.

To remove any ambiguity, it's recommended that you always explicitly specify the \code{createCompositeSet} argument when creating an Xdf data source object (objects created by dplyrXdf will always do this).
}
\seealso{
\code{\link{as}}, \code{\link{is}}, \code{\link{inherits}},
\code{\link{rxDataStep}}, \code{\link{rxImport}}
}

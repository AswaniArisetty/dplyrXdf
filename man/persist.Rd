% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/persist_tbl_xdf.R
\name{persist}
\alias{persist}
\alias{persist.RxFileData}
\alias{persist.tbl_xdf}
\title{Copy an xdf tbl to a permanent storage location.}
\usage{
persist(data, ...)

\method{persist}{tbl_xdf}(data, outFile, overwrite = TRUE,
  deleteOldTbl = FALSE, ...)

\method{persist}{RxFileData}(data, ...)
}
\arguments{
\item{data}{An xdf tbl}

\item{...}{Other arguments to \code{\link[RevoScaleR]{rxDataStep}}}

\item{outFile}{Character string giving the name of the output xdf file}

\item{overwrite}{If the outfile already exists, should it be overwritten?}

\item{deleteOldTbl}{Should the original tbl file be removed?}
}
\value{
An \code{RxXdfData} object pointing to the new xdf file.
}
\description{
Copy an xdf tbl to a permanent storage location.
}
\details{
By default, the underlying data for an xdf tbl is saved as a file in the R temporary directory, and is managed by dplyrXdf. This can cause confusion when a tbl is reused by later dplyrXdf operations, which can overwrite or delete the data.

The \code{persist} verb is a simple shell around \code{rxDataStep} that copies the data into a new xdf file at the location given by \code{outFile}. This ensures that the data will not be modified by dplyrXdf, and will be persistent beyond the end of the R session.

Calling this verb on a non-tbl data source (eg a raw \code{RxXdfData} object) will give a warning and return the data source unchanged.
}
\seealso{
\code{\link{as.data.frame.RxXdfData}}, \code{\link[RevoScaleR]{rxDataStep}}
}


% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/joins.R
\name{join}
\alias{join}
\alias{left_join}
\alias{right_join}
\alias{inner_join}
\alias{full_join}
\alias{semi_join}
\alias{anti_join}
\alias{left_join.RxFileData}
\alias{right_join.RxFileData}
\alias{inner_join.RxFileData}
\alias{full_join.RxFileData}
\alias{semi_join.RxFileData}
\alias{anti_join.RxFileData}
\title{Join two data sources together}
\usage{
\method{left_join}{RxFileData}(x, y, by = NULL, copy = FALSE,
  suffix = c(".x", ".y"), .outFile = tbl_xdf(x), .rxArgs, ...)

\method{right_join}{RxFileData}(x, y, by = NULL, copy = FALSE,
  suffix = c(".x", ".y"), .outFile = tbl_xdf(x), .rxArgs, ...)

\method{inner_join}{RxFileData}(x, y, by = NULL, copy = FALSE,
  suffix = c(".x", ".y"), .outFile = tbl_xdf(x), .rxArgs, ...)

\method{full_join}{RxFileData}(x, y, by = NULL, copy = FALSE,
  suffix = c(".x", ".y"), .outFile = tbl_xdf(x), .rxArgs, ...)

\method{semi_join}{RxFileData}(x, y, by = NULL, copy = FALSE,
  .outFile = tbl_xdf(x), .rxArgs, ...)

\method{anti_join}{RxFileData}(x, y, by = NULL, copy = FALSE,
  .outFile = tbl_xdf(x), .rxArgs, ...)
}
\arguments{
\item{x, }{y Data sources to join.}

\item{by}{Character vector of variables to join by. See \code{\link[dplyr]{join}} for details.}

\item{copy}{If the data sources are not stored in the same filesystem, whether to copy y to x's location. Not currently implemented.}

\item{.outFile}{Output format for the returned data. If not supplied, create an xdf tbl; if \code{NULL}, return a data frame; if a character string naming a file, save an Xdf file at that location.}

\item{.rxArgs}{A list of RevoScaleR arguments. See \code{\link{rxArgs}} for details.}

\item{...}{Not currently used.}
}
\value{
An object representing the joined data. This depends on the \code{.outFile} argument: if missing, it will be an xdf tbl object; if \code{NULL}, a data frame; and if a filename, an Xdf data source referencing a file saved to that location.
}
\description{
Join two data sources together
}
\details{
These functions merge two datasets together, using \code{rxMerge}.

For best performance, avoid merging on factor variables or on variables with mismatched types, especially in Spark. This is because \code{rxMerge} is picky about its inputs, and dplyrXdf may have to transform the data to ensure that the merge succeeds.

Currently, merging in Spark has a few limitations. Only Xdf (in HDFS) and Spark data sources (\code{RxHiveData}, \code{RxOrcData} and \code{RxParquetData}) can be merged, and only the "standard" join operations are supported: \code{left_join}, \code{right_join}, \code{inner_join} and \code{full join}.
}
\seealso{
\code{\link[dplyr]{join}} in package dplyr, \code{\link{rxMerge}}
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/crbind.R
\name{cbind.RxXdfData}
\alias{cbind.RxXdfData}
\alias{cbind}
\alias{rbind}
\alias{rbind.RxXdfData}
\title{Combine data sources by rows or columns}
\usage{
\method{cbind}{RxXdfData}(..., deparse.level = 1,
  .outFile = tbl_xdf(lst[[1]]), .rxArgs)

\method{rbind}{RxXdfData}(..., deparse.level = 1,
  .outFile = tbl_xdf(lst[[1]]), .rxArgs)
}
\arguments{
\item{...}{Objects to combine. Can be \code{RxXdfData} or \code{tbl_xdf} data sources.}

\item{deparse.level}{For compatibility with the base \code{cbind} and \code{rbind} generics. Not used.}

\item{.outFile}{Output format for the returned data. If not supplied, create an xdf tbl; if \code{NULL}, return a data frame; if a character string naming a file, save an Xdf file at that location.}

\item{.rxArgs}{A list of RevoScaleR arguments. See \code{\link{rxArgs}} for details.}
}
\description{
Combine data sources by rows or columns
}
\details{
Due to the specifics of how R searches for methods for \code{cbind} and \code{rbind}, there are a few caveats to using these. First, \emph{all} the objects to be combined must be Xdf files for the correct method to be found; in particular, trying to combine a data frame and an Xdf file will result in an error (or bad output). Second, specifying the \code{rxArgs} argument will fail if called from the generic. These issues can be worked around by calling the Xdf method directly: \code{cbind.RxXdfData(xdf1, xdf2, .rxArgs=...)}, or \code{rbind.RxXdfData(xdf1, xdf2, .rxArgs=...)}.

These methods also have some limitations compared to \code{cbind} and \code{rbind} for data frames. The \code{cbind.RxXdfData} method will drop columns that have duplicate names, with a warning; this behaviour is different to \code{cbind} with data frames, which will create an output df with duplicated names; and to \code{dplyr::bind_cols}, which will rename columns to be unique. The \code{rbind.RxXdfData} method will give an error if the columns in all the objects don't match, rather than creating new columns.

These methods support HDFS data in the local compute compute context, but not the Hadoop or Spark compute contexts.
}
\seealso{
\code{\link[base]{cbind}} and \code{\link[base]{rbind}} in base R,
\code{\link[dplyr]{bind_cols}} and \code{\link[dplyr]{bind_rows}} in package dplyr
}
